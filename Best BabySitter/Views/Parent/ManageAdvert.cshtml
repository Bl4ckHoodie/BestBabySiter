@model Best_BabySitter.Models.Advert

@{
    ViewBag.Title = "ManageAdvert";
    Layout = "~/Views/Shared/_ParentLayout.cshtml";
}
@if (TempData["alertMessage"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> @TempData["alertMessage"].ToString().</strong>
    </div>
    TempData["alertMessage"] = null;
}
else if (TempData["errorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> @TempData["errorMessage"].ToString().</strong>
    </div>
    TempData["errorMessage"] = null;
};
<div class="manage-adverts-container" style="display:flex">
    @{
        List<Best_BabySitter.Models.Advert> list = ViewData["openAdverts"] as List<Best_BabySitter.Models.Advert>;
        int pos = 0;
        <div class="manage-adverts-container-item open-advert-board">
            <h4>OPEN ADVERTS</h4>
            <div class=" dashboard-event-adverts">
                @{
                    int count = 0;
                    foreach (var ad in list)
                    {
                        <div class="event-advert" onclick="changeAdvert(@count)" >
                            <Label class="advert-id">#AD|@ad.ID</Label>
                            <Label class="advert-date">@String.Format("{0:MM/dd/yyyy}", ad.StartDate)</Label><br />
                            <Label class="advert-time">@String.Format("{0:HH:mm}", ad.StartTime)- @String.Format("{0:HH:mm}", ad.EndTime)</Label>
                            <div class="advert-info">
                                <span class=" advert-icon fa fa-calendar-alt"></span>
                                <Label>@ad.Street , @ad.City</Label>
                            </div>
                        </div>
                        count++;
                    }
                }
           

            </div>
        </div>
        <div class="manage-adverts-container-item manage-advert-board">
            <div class="manage-advert">
                <p class="manage-advert-btn">
                    <a class="manage-advert-nav edit-advert-btn">
                        ADVERT
                    </a>
                    <a class="manage-advert-nav manage-advert-responses-btn">
                        RESPONSES
                    </a>
                </p>

                <div class="edit-advert-container">
                    @using (Html.BeginForm())
                    {

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <Label class="container-header">INFORMATION</Label>
                        <hr />
                        <div class="container-block">
                            <p>
                                @Html.LabelFor(model => list[pos].NumKids, htmlAttributes: new { @class = "container-label" })
                                <input type="number" class="cur-ad-num-kids" min="1" max="20" />
                                @Html.ValidationMessageFor(model => list[pos].NumKids, "", new { @class = "text-danger" })
                            </p>
                            <p>
                                @Html.LabelFor(model => list[pos].AgeRange, htmlAttributes: new { @class = "container-label" })
                                <input type="text" class="cur-ad-age-range" value="" />
                                @Html.ValidationMessageFor(model => list[pos].AgeRange, "", new { @class = "text-danger" })
                            </p>
                        </div>
                        <Label class="container-header">DATE</Label>
                        <hr />
                        <div class="container-block">
                            <p>
                                @Html.LabelFor(model => list[pos].StartDate, htmlAttributes: new { @class = "container-label" })
                                <input type="date" class="cur-ad-start-date" value="" />
                                @Html.ValidationMessageFor(model => list[pos].StartDate, "", new { @class = "text-danger" })

                            </p>
                            <p>
                                @Html.LabelFor(model => list[pos].EndDate, htmlAttributes: new { @class = "container-label" })
                                <input type="date" class="cur-ad-end-date" value="" />
                                @Html.ValidationMessageFor(model => list[pos].EndDate, "", new { @class = "text-danger" })
                            </p>
                            <p>

                                @Html.LabelFor(model => list[pos].StartTime, htmlAttributes: new { @class = "container-label" })
                                <input type="time" class="cur-ad-start-time" value="" />
                                @Html.ValidationMessageFor(model => list[pos].StartTime, "", new { @class = "text-danger" })

                            </p>
                            <p>
                                @Html.LabelFor(model => list[pos].EndTime, htmlAttributes: new { @class = "container-label" })
                                <input type="time" class="cur-ad-end-time" value="" />
                                @Html.ValidationMessageFor(model => list[pos].EndTime, "", new { @class = "text-danger" })
                            </p>
                        </div>
                        <Label class="container-header">LOCATION</Label>
                        <hr />
                        <div class="container-block">
                            <p>

                                @Html.LabelFor(model => list[pos].Street, htmlAttributes: new { @class = "container-label" })
                                <input type="text" class="cur-ad-street" value="" />
                                @Html.ValidationMessageFor(model => list[pos].Street, "", new { @class = "text-danger" })

                            </p>
                            <p>
                                @Html.LabelFor(model => list[pos].City, htmlAttributes: new { @class = "container-label" })
                                <input type="text"  class="cur-ad-city" value=""/>
                                @Html.ValidationMessageFor(model => list[pos].City, "", new { @class = "text-danger" })
                            </p>
                        </div>
                        <Label class="container-header">SPECIFICATION</Label>
                        <hr />
                        <div class="container-block">
                            <p>

                                @Html.LabelFor(model => list[pos].Specification, htmlAttributes: new { @class = "container-label" })
                                 <textarea class="cur-ad-specif">

                                </textarea>
                                @Html.ValidationMessageFor(model => list[pos].Specification, "", new { @class = "text-danger" })

                            </p>

                        </div>
                        <div class="container-block">
                            <p class="create-advert-buttons">
                                <input type="submit" class="create-advert-button action-button update-advert" value="Update Advert" title="Update Advert" />
                                <input type="button" class="create-advert-button normal-button" value="Cancel" title="Cancel" />

                            </p>
                        </div>
                    }

                </div>
                <div class="edit-advert-reposonse-container">
                    <div class="edit-advert-reposonse-manager">
                        <div class="sitter-event-adverts">
                            
                        </div>
                        <div class="advert-repsonse-container">
                            <h2 class="advert-response-sitter-name"></h2><img class="sitter_profile-pic" src="https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1331&q=80" alt="profile_pic" /><br />
                            <label><i class="fa fa-at"></i><a class="advert-response-sitter-email"></a></label>
                            <label><i class="fa fa-phone"></i><a class="advert-response-sitter-phone"></a></label>
                            <label><i class="fa fa-map-pin"></i><a class="advert-response-city"></a></label>
                            <label><i class="fa fa-money-bill"></i>Charge Per Service <a class="advert-response-sitter-charge"></a></label>
                            <label>Service Duration <a class="advert-response-sitter-duration"></a></label><br />
                            <h3>About Me</h3>
                            <p class="advert-response-sitter-about">
                                no results found
                            </p>
                            <h3>Experience</h3>
                            <p class="advert-response-sitter-experience">
                                no results found
                            </p>
                            <br />
                            <h3>Education</h3>
                            <p class="advert-response-sitter-education">
                                no results found
                            </p>

                            <input type="button" class="action-button" style="float:right" value="ASSIGN SITTER TO JOB" />
                        </div>
                    </div>
                   </div>
                </div>
        </div>
    }

</div>
